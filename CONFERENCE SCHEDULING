A set of activities (conferences) â€“ each conference has a start time and a finish time:

Conf ID 1 2 3 4 5 6 7 8 9 10 11
Start Time 1 3 0 5 3 5 6 8 8 2 12
Finish Time 4 5 6 7 8 9 10 11 12 13 14

What is the maximum number of activities that can be completed?
code: 

#include <bits/stdc++.h>
#include <vector>
using namespace std;

struct con{
    int id;
    int s_time;
    int f_time;
};

bool comp(const con& a, const con& b) {
    return a.f_time < b.f_time;
}

int maxConferences(vector<con>& conferences) {
    sort(conferences.begin(), conferences.end(), comp);
    int n = conferences.size();
    int count = 1;
    int currentFinishTime = conferences[0].f_time;

    for (int i = 1; i < n; ++i) {
        if (conferences[i].s_time >= currentFinishTime) {
            count++;
            currentFinishTime = conferences[i].f_time;
        }
    }
    return count;
}

int main() {
    vector<con> conferences = {
        {1, 1, 4}, {2, 3, 5}, {3, 0, 6}, {4, 5, 7}, {5, 3, 8},
        {6, 5, 9}, {7, 6, 10}, {8, 8, 11}, {9, 8, 12}, {10, 2, 13}, {11, 12, 14}
    };
    int max_activities = maxConferences(conferences);
    cout << "Maximum number: " << max_activities << endl;
    return 0;
}
